{"version":3,"file":"assets/js/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/mapClass.js","webpack:///./src/mapCommoner.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import BMapHelper from './mapClass'\n\nexport const createBMapHelper = (opts = {}) => {\n    const name = opts.name || 'BMapHelper'\n\n    return {\n        name,\n\n        props: {\n            title: {\n                type: [String, Boolean]\n            },\n            width: {\n                type: [String, Number]\n            },\n            height: {\n                type: [String, Number]\n            }\n        },\n\n        data() {\n            return {}\n        },\n\n        mounted() {\n            this.$map = new BMapHelper({\n                el: this.$el,\n                zoom: 8,\n                maxZoom: 18\n            })\n        },\n\n        render(h) {\n            const styles = {\n                width: this.width + 'px',\n                height: this.height + 'px'\n            }\n            return \n                <div ref=\"mapComp\" style={styles}></div>\n        }\n    }\n}\n\nexport const install = (Vue, opts) => {\n    const Component = createBMapHelper(opts)\n    Vue.component(Component.name, Component)\n}\n\nexport default install\n","import { creatMap, createPoint } from './mapCommoner'\n// 默认center\nconst defaultCenter = ['99.825', '36.384']\n\nclass MapHelper {\n    constructor({ el, center = defaultCenter, zoom, maxZoom}) {\n        this.el = el\n        this.mapCenter = center\n        this.mapZoom = zoom\n        this.maxZoom = maxZoom\n        this.create()\n    }\n\n    create() {\n        this.map = creatMap(this.el, { minZoom: 3, maxZoom: this.maxZoom })\n        this.map.clearOverlays()\n        const poi = createPoint(this.mapCenter[0], this.mapCenter[1])\n        this.map.centerAndZoom(poi, this.mapZoom)\n        this.map.enableScrollWheelZoom()\n    }\n}\n\nexport default MapHelper\n","const areaConfig = {\n    strokeColor: 'rgba(255, 0, 0, 0.7)',\n    strokeWeight: 1,\n    strokeOpacity: 0.8,\n    fillColor: '#da416f',\n    fillOpacity: 0.2\n}\n// Win样式配置\nconst winConfig = {\n    width: 250,\n    height: 0,\n    enableMessage: true\n}\n\n// Line 样式配置\nconst lineConfig = {\n    // 边线颜色。\n    strokeColor: '#da416f',\n    // 填充颜色。当参数为空时，圆形将没有填充效果。\n    fillColor: '#da416f',\n    // 边线的宽度，以像素为单位\n    strokeWeight: 2,\n    // 边线透明度，取值范围0 - 1。\n    strokeOpacity: 0.8,\n    // 填充的透明度，取值范围0 - 1。\n    fillOpacity: 0.8,\n    // 边线的样式，solid或dashed。\n    strokeStyle: 'solid'\n}\n\n// 画图工具 样式配置\nconst drawOptions = {\n    // 边线颜色。\n    strokeColor: 'red',\n    // 填充颜色。当参数为空时，圆形将没有填充效果。\n    fillColor: '#da416f',\n    // 边线的宽度，以像素为单位。\n    strokeWeight: 1,\n    // 边线透明度，取值范围0 - 1。\n    strokeOpacity: 0.8,\n    // 填充的透明度，取值范围0 - 1。\n    fillOpacity: 0.4,\n    // 边线的样式，solid或dashed。\n    strokeStyle: 'solid'\n}\n\n/**\n * [createPoint 创建点 ]\n * @param  {[type]} lng [description]\n * @param  {[type]} lat [description]\n * @return {[type]}     [description]\n */\nexport const createPoint = (lng, lat) => {\n    return new BMap.Point(Number(lng), Number(lat))\n}\n\n/**\n * [创建地图]\n * @param  {Dom} map dom\n * @param {Object} config 地图配置\n * @return {[type]}     [description]\n */\nexport const creatMap = function(map, config) {\n    return new BMap.Map(map, config)\n}\n\n/**\n *\n * [根据一组经纬度画多边形]\n * @param arr {Array{Object}}``\n * @return {[type]} [description]\n */\nexport const drawPolygon = function(arr) {\n    if (arr && arr.length > 0) {\n        const points = arr.map(({ lng, lat }) => {\n            return createPoint(lng, lat)\n        })\n        return new BMap.Polygon(points, areaConfig)\n    }\n}\n\n/**\n * [画轨迹线]\n * @param  {[type]} arr [description]\n * @return {[type]}     [description]\n */\nexport const drawPolyline = function(arr) {\n    if (arr && arr.length > 0) {\n        const points = arr.map(({ lng, lat }) => {\n            return createPoint(lng, lat)\n        })\n        // Let sy = new BMap.Symbol(7, {\n        //     scale: 0.4, //图标缩放大小\n        //     strokeColor: '#fff', //设置矢量图标的线填充颜色\n        //     strokeWeight: 1, //设置线宽\n        //     strokeOpacity: 1\n        // });\n        // let icons = new BMap.IconSequence(sy, '10', '30');\n        // lineConfig['icons'] = [icons];\n\n        const polyline = new BMap.Polyline(points, lineConfig)\n        return polyline\n    }\n}\n\n/**\n * [画圆]\n * @param  {[type]} lng    [description]\n * @param  {[type]} lat    [description]\n * @param  {[type]} radius [description]\n * @return {[type]}        [description]\n */\nexport const drawCircle = function({ lng, lat, radius }) {\n    const circle = new BMap.Circle(createPoint(lng, lat), radius, areaConfig)\n    return circle\n}\n\n/**\n * [创建标记marker对象]\n * @param  {String} lng              [description]\n * @param  {String} lat              [description]\n * @param  {String} [colorType='red' }]            [description]\n * @return {[type]}                  [description]\n */\nexport const createMarker = function({ lng, lat, colorType = 'red' }) {\n    const path = `./lib/vendor/gis/images/${colorType}Marker.png`\n    const myIcon = new BMap.Icon(path, new BMap.Size(35, 55))\n    const point = createPoint(lng, lat)\n    const marker = new BMap.Marker(point, {\n        icon: myIcon\n    })\n    return marker\n}\n\n/**\n * [创建自定义标记：圆中间带数字（total）]\n * @param  {String} lng              [description]\n * @param  {String} lat              [description]\n * @param  {String} total            [description]\n * @return {[type]}                  [description]\n */\nexport const createMyMarker = function({ lng, lat, total }) {\n    const point = new BMap.Point(lng, lat)\n    function ComplexCustomOverlay(point, total) {\n        this._point = point\n        this._text = total\n    }\n\n    ComplexCustomOverlay.prototype = new BMap.Overlay()\n    ComplexCustomOverlay.prototype.initialize = function(map) {\n        this._map = map\n        let div = document.createElement('div')\n        div.style.position = 'absolute'\n        div.style.height = '25px'\n        div.style.width = '25px'\n        div.style.borderRadius = '50%'\n        div.style.backgroundColor = '#DA416F'\n        div.style.color = 'white'\n        div.style.boxShadow = '0 2px 4px 0 rgba(0,0,0,0.50)'\n        div.style.lineHeight = '25px'\n        div.style.whiteSpace = 'nowrap'\n        div.style.MozUserSelect = 'none'\n        div.style.cursor = 'pointer'\n        div.style.fontSize = '12px'\n        div.style.textAlign = 'center'\n        let span = document.createElement('span')\n        div.append(span)\n        span.append(document.createTextNode(this._text))\n        map.getPanes().labelPane.append(div)\n        return div\n    }\n\n    ComplexCustomOverlay.prototype.draw = function() {\n        let map = this._map\n        let pixel = map.pointToOverlayPixel(this._point)\n        this._div.style.left = pixel.x - 13 + 'px'\n        this._div.style.top = pixel.y - 20 + 'px'\n        // This._div.style.top = pixel.y - (index + 1) * 3 + 'px';\n    }\n\n    ComplexCustomOverlay.prototype.addEventListener = function(event, fun) {\n        this._div['on' + event] = fun\n    }\n\n    let marker = new ComplexCustomOverlay(point, total)\n    return marker\n}\n\n/**\n * [创建信息窗口对象]\n * @param  {String} content [description]\n * @return {[type]}         [description]\n */\nexport const createInfoWindow = function(content) {\n    // 创建信息窗口对象\n    let infoWindow = new BMap.InfoWindow(content, winConfig)\n    return infoWindow\n}\n\n/**\n * [创建画图工具对象]\n * @return {[type]} [description]\n */\nexport const createDrawingManager = function(map) {\n    return new BMapLib.DrawingManager(map, {\n        // 是否开启绘制模式\n        isOpen: false,\n        // 是否显示工具栏\n        enableDrawingTool: true,\n        drawingToolOptions: {\n            // 位置\n            anchor: window.BMAP_ANCHOR_TOP_RIGHT,\n            // 偏离值\n            offset: new BMap.Size(5, 5),\n            // 鼠标绘制工具\n            drawingModes: [\n                window.BMAP_DRAWING_POLYGON,\n                window.BMAP_DRAWING_CIRCLE,\n                window.BMAP_DRAWING_RECTANGLE\n            ]\n        },\n        circleOptions: drawOptions,\n        polylineOptions: drawOptions,\n        polygonOptions: drawOptions,\n        rectangleOptions: drawOptions\n    })\n}\n\n/**\n * 创建热力图层\n * @param  {[type]} heatRadius [description]\n * @return {[type]}            [description]\n */\nexport const createHeatmapOverlay = function(map) {\n    let heatRadius = 30\n    let zoom = map.getZoom()\n    switch (zoom) {\n        case 19:\n            heatRadius = 40\n            break\n        case 18:\n            heatRadius = 30\n            break\n        case 17:\n            heatRadius = 23\n            break\n        case 16:\n            heatRadius = 17\n            break\n        case 15:\n            heatRadius = 12\n            break\n        default:\n            heatRadius = 10\n            break\n    }\n\n    const heatMapColorConfig = {\n        0.3: 'rgb(0,42, 255)',\n        0.5: 'rgb(123, 240, 123)',\n        0.6: 'rgb(242, 248, 90)',\n        0.8: 'rgb(247, 73, 66)'\n    }\n    const heatMapOlay = new BMapLib.HeatmapOverlay({\n        radius: heatRadius,\n        visible: true,\n        gradient: heatMapColorConfig\n    })\n    return heatMapOlay\n}\n\n/**\n * 获取一段path的区域\n * @param  {[type]} path [description]\n * @return {[type]}      [description]\n */\nexport const getPolygonArea = function(path) {\n    const ply = new BMap.Polygon(path)\n    const area = BMapLib.GeoUtils.getPolygonArea(ply) / 1000000\n    return area\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAnCA;AAoCA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AChDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAiBA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAfA;AAqBA;AACA;AACA;AAEA;;;;;;;AAMA;AACA;AACA;AAEA;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AACA;AApBA;AAsBA;AAEA;;;;;;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}